package net.javaguides.springboot.mapper;

import java.util.List;
import java.util.stream.Collectors;

import net.javaguides.springboot.dto.CartItemDto;
import net.javaguides.springboot.model.CartItem;

public class CartItemMapper {
    
    public static CartItemDto mapToCartItemDto(CartItem cartItem) {
        CartItemDto cartItemDto = new CartItemDto();
        cartItemDto.setId(cartItem.getId());
        cartItemDto.setCart(CartMapper.mapToCartDto(cartItem.getCart()));
        cartItemDto.setOrder(OrderMapper.mapToOrderDto(cartItem.getOrder())); // Map to OrderDto
        cartItemDto.setProduct(ProductMapper.mapToProductDto(cartItem.getProduct()));
        cartItemDto.setQuantity(cartItem.getQuantity());
        cartItemDto.setPrice(cartItem.getPrice()); // Set price from CartItem
        return cartItemDto;
    }
    
    public static CartItem mapToCartItem(CartItemDto cartItemDto) {
        CartItem cartItem = new CartItem();
        cartItem.setId(cartItemDto.getId());
        cartItem.setCart(CartMapper.mapToCart(cartItemDto.getCart()));
        cartItem.setOrder(OrderMapper.mapToOrder(cartItemDto.getOrder())); // Map to Order
        cartItem.setProduct(ProductMapper.mapToProduct(cartItemDto.getProduct()));
        cartItem.setQuantity(cartItemDto.getQuantity());
        cartItem.setPrice(cartItemDto.getPrice()); // Set price in CartItem
        return cartItem;
    }
    
    public static List<CartItemDto> mapToCartItemDtoList(List<CartItem> cartItems) {
        return cartItems.stream()
                .map(CartItemMapper::mapToCartItemDto)
                .collect(Collectors.toList());
    }

    public static List<CartItem> mapToCartItemList(List<CartItemDto> cartItemDtos) {
        return cartItemDtos.stream()
                .map(CartItemMapper::mapToCartItem)
                .collect(Collectors.toList());
    }
}
