package net.javaguides.springboot.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import net.javaguides.springboot.dto.CartItemDto;
import net.javaguides.springboot.exception.CartItemNotFoundException;
import net.javaguides.springboot.mapper.CartItemMapper;
import net.javaguides.springboot.model.CartItem;
import net.javaguides.springboot.repository.CartItemRepository;

@Service
public class CartItemService {

    @Autowired
    private CartItemRepository cartItemRepository;

    public CartItemService(CartItemRepository cartItemRepository) {
        this.cartItemRepository = cartItemRepository;
    }

    public List<CartItemDto> getCartItemsByCartId(Long cartId) {
        List<CartItem> cartItems = cartItemRepository.findByCartId(cartId);
        return CartItemMapper.mapToCartItemDtoList(cartItems);
    }

    public CartItemDto addCartItem(CartItemDto cartItemDto) {
        CartItem cartItem = CartItemMapper.mapToCartItem(cartItemDto);
        cartItem = cartItemRepository.save(cartItem);
        return CartItemMapper.mapToCartItemDto(cartItem);
    }

    public CartItemDto updateCartItem(CartItemDto cartItemDto) {
        Optional<CartItem> optionalCartItem = cartItemRepository.findById(cartItemDto.getId());
        if (optionalCartItem.isPresent()) {
            CartItem cartItem = optionalCartItem.get();
            cartItem.setQuantity(cartItemDto.getQuantity());
            cartItem = cartItemRepository.save(cartItem);
            return CartItemMapper.mapToCartItemDto(cartItem);
        } else {
            throw new CartItemNotFoundException("Cart item not found with ID: " + cartItemDto.getId());
        }
    }

    public void deleteCartItem(Long cartItemId) {
        Optional<CartItem> optionalCartItem = cartItemRepository.findById(cartItemId);
        if (optionalCartItem.isPresent()) {
            cartItemRepository.delete(optionalCartItem.get());
        } else {
            throw new CartItemNotFoundException("Cart item not found with ID: " + cartItemId);
        }
    }
}
